"use strict";
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContainerInstanceManagementClientContext = void 0;
const msRestAzure = __importStar(require("@azure/ms-rest-azure-js"));
const packageName = "@azure/arm-containerinstance";
const packageVersion = "0.1.0";
class ContainerInstanceManagementClientContext extends msRestAzure.AzureServiceClient {
    /**
     * Initializes a new instance of the ContainerInstanceManagementClient class.
     * @param credentials Credentials needed for the client to connect to Azure.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure
     * subscription. The subscription ID forms part of the URI for every service call.
     * @param [options] The parameter options
     */
    constructor(credentials, subscriptionId, options) {
        if (credentials == undefined) {
            throw new Error('\'credentials\' cannot be null.');
        }
        if (subscriptionId == undefined) {
            throw new Error('\'subscriptionId\' cannot be null.');
        }
        if (!options) {
            options = {};
        }
        if (!options.userAgent) {
            const defaultUserAgent = msRestAzure.getDefaultUserAgentValue();
            options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;
        }
        super(credentials, options);
        this.apiVersion = '2018-10-01';
        this.acceptLanguage = 'en-US';
        this.longRunningOperationRetryTimeout = 30;
        this.baseUri = options.baseUri || this.baseUri || "https://management.azure.com";
        this.requestContentType = "application/json; charset=utf-8";
        this.credentials = credentials;
        this.subscriptionId = subscriptionId;
        if (options.acceptLanguage !== null && options.acceptLanguage !== undefined) {
            this.acceptLanguage = options.acceptLanguage;
        }
        if (options.longRunningOperationRetryTimeout !== null && options.longRunningOperationRetryTimeout !== undefined) {
            this.longRunningOperationRetryTimeout = options.longRunningOperationRetryTimeout;
        }
    }
}
exports.ContainerInstanceManagementClientContext = ContainerInstanceManagementClientContext;
