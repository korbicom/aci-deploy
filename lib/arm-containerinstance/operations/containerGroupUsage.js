"use strict";
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContainerGroupUsage = void 0;
const msRest = __importStar(require("@azure/ms-rest-js"));
const Mappers = __importStar(require("../models/containerGroupUsageMappers"));
const Parameters = __importStar(require("../models/parameters"));
/** Class representing a ContainerGroupUsage. */
class ContainerGroupUsage {
    /**
     * Create a ContainerGroupUsage.
     * @param {ContainerInstanceManagementClientContext} client Reference to the service client.
     */
    constructor(client) {
        this.client = client;
    }
    list(location, options, callback) {
        return this.client.sendOperationRequest({
            location,
            options
        }, listOperationSpec, callback);
    }
}
exports.ContainerGroupUsage = ContainerGroupUsage;
// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/providers/Microsoft.ContainerInstance/locations/{location}/usages",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.location
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.UsageListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer
};
